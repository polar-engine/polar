@attrib vec2 a_vertex
@varying smooth vec2 v_vertex
@in color u_colorBuffer
@gin motion1 u_one
@gin motion2 u_two
@out rgba32 color o_color
@gout rgba32 motion1 o_one
@gout rgba32 motion2 o_two

@shader vertex

void main() {
	gl_Position = vec4(a_vertex, 0.0, 1.0);
	v_vertex = (a_vertex + 1.0) / 2.0;
}

@shader fragment

int buf = 0;

void main() {
	vec2 texCoord = v_vertex;
	vec4 color = texture(u_colorBuffer, texCoord);
	vec4 prev;
	if(buf == 0) {
		buf = 1;
		prev = color;
		o_one = color;
		o_two = color;
	} else if(buf == 1) {
		buf = 2;
		prev = texture(u_two, texCoord);
		o_one = color;
	} else {
		buf = 1;
		prev = texture(u_one, texCoord);
		o_two = color;
	}
	o_color = mix(prev, color, 0.00001);
	o_color.r = float(buf / 2.0);
}
