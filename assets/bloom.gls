@attrib vec2 a_vertex
@varying smooth vec2 v_vertex
@in color u_colorBuffer
@gin depth u_depthBuffer
@out color color o_color

@shader vertex

void main() {
	gl_Position = vec4(a_vertex, 0.0, 1.0);
	v_vertex = (a_vertex + 1.0) / 2.0;
}

@shader fragment

const float maxBlur = 0.35;
const float bias = 0.01;

void main() {
	vec2 texCoord = v_vertex;
	vec4 color = texture(u_colorBuffer, texCoord);

	float aspect = 1280.0 / 720.0;
	vec2 aspectCorrect = vec2(1.0, aspect);

	float factor = pow(length(color.rgb), 0.01);
	vec2 blur = vec2(clamp((1 - factor) * bias, 0, maxBlur));

	vec4 col = vec4(0.0);

	col += texture(u_colorBuffer, texCoord);
	col += texture(u_colorBuffer, texCoord + (vec2( 0.0,   0.4)  * aspectCorrect) * blur);
	col += texture(u_colorBuffer, texCoord + (vec2( 0.15,  0.37) * aspectCorrect) * blur);
	col += texture(u_colorBuffer, texCoord + (vec2( 0.29,  0.29) * aspectCorrect) * blur);
	col += texture(u_colorBuffer, texCoord + (vec2(-0.37,  0.15) * aspectCorrect) * blur);
	col += texture(u_colorBuffer, texCoord + (vec2( 0.4,   0.0)  * aspectCorrect) * blur);
	col += texture(u_colorBuffer, texCoord + (vec2( 0.37, -0.15) * aspectCorrect) * blur);
	col += texture(u_colorBuffer, texCoord + (vec2( 0.29, -0.29) * aspectCorrect) * blur);
	col += texture(u_colorBuffer, texCoord + (vec2(-0.15, -0.37) * aspectCorrect) * blur);
	col += texture(u_colorBuffer, texCoord + (vec2( 0.0,  -0.4)  * aspectCorrect) * blur);
	col += texture(u_colorBuffer, texCoord + (vec2(-0.15,  0.37) * aspectCorrect) * blur);
	col += texture(u_colorBuffer, texCoord + (vec2(-0.29,  0.29) * aspectCorrect) * blur);
	col += texture(u_colorBuffer, texCoord + (vec2( 0.37,  0.15) * aspectCorrect) * blur);
	col += texture(u_colorBuffer, texCoord + (vec2(-0.4,   0.0)  * aspectCorrect) * blur);
	col += texture(u_colorBuffer, texCoord + (vec2(-0.37, -0.15) * aspectCorrect) * blur);
	col += texture(u_colorBuffer, texCoord + (vec2(-0.29, -0.29) * aspectCorrect) * blur);
	col += texture(u_colorBuffer, texCoord + (vec2( 0.15, -0.37) * aspectCorrect) * blur);

	col += texture(u_colorBuffer, texCoord + (vec2( 0.15,  0.37) * aspectCorrect) * blur * 0.9);
	col += texture(u_colorBuffer, texCoord + (vec2(-0.37,  0.15) * aspectCorrect) * blur * 0.9);
	col += texture(u_colorBuffer, texCoord + (vec2( 0.37, -0.15) * aspectCorrect) * blur * 0.9);
	col += texture(u_colorBuffer, texCoord + (vec2(-0.15, -0.37) * aspectCorrect) * blur * 0.9);
	col += texture(u_colorBuffer, texCoord + (vec2(-0.15,  0.37) * aspectCorrect) * blur * 0.9);
	col += texture(u_colorBuffer, texCoord + (vec2( 0.37,  0.15) * aspectCorrect) * blur * 0.9);
	col += texture(u_colorBuffer, texCoord + (vec2(-0.37, -0.15) * aspectCorrect) * blur * 0.9);
	col += texture(u_colorBuffer, texCoord + (vec2( 0.15, -0.37) * aspectCorrect) * blur * 0.9);

	col += texture(u_colorBuffer, texCoord + (vec2( 0.29,  0.29) * aspectCorrect) * blur * 0.7);
	col += texture(u_colorBuffer, texCoord + (vec2( 0.4,   0.0)  * aspectCorrect) * blur * 0.7);
	col += texture(u_colorBuffer, texCoord + (vec2( 0.29, -0.29) * aspectCorrect) * blur * 0.7);
	col += texture(u_colorBuffer, texCoord + (vec2( 0.0,  -0.4)  * aspectCorrect) * blur * 0.7);
	col += texture(u_colorBuffer, texCoord + (vec2(-0.29,  0.29) * aspectCorrect) * blur * 0.7);
	col += texture(u_colorBuffer, texCoord + (vec2(-0.4,   0.0)  * aspectCorrect) * blur * 0.7);
	col += texture(u_colorBuffer, texCoord + (vec2(-0.29, -0.29) * aspectCorrect) * blur * 0.7);
	col += texture(u_colorBuffer, texCoord + (vec2( 0.0,   0.4)  * aspectCorrect) * blur * 0.7);

	col += texture(u_colorBuffer, texCoord + (vec2( 0.29,  0.29) * aspectCorrect) * blur * 0.4);
	col += texture(u_colorBuffer, texCoord + (vec2( 0.4,   0.0)  * aspectCorrect) * blur * 0.4);
	col += texture(u_colorBuffer, texCoord + (vec2( 0.29, -0.29) * aspectCorrect) * blur * 0.4);
	col += texture(u_colorBuffer, texCoord + (vec2( 0.0,  -0.4)  * aspectCorrect) * blur * 0.4);
	col += texture(u_colorBuffer, texCoord + (vec2(-0.29,  0.29) * aspectCorrect) * blur * 0.4);
	col += texture(u_colorBuffer, texCoord + (vec2(-0.4,   0.0)  * aspectCorrect) * blur * 0.4);
	col += texture(u_colorBuffer, texCoord + (vec2(-0.29, -0.29) * aspectCorrect) * blur * 0.4);
	col += texture(u_colorBuffer, texCoord + (vec2( 0.0,   0.4)  * aspectCorrect) * blur * 0.4);

	o_color = col / 41.0;
	o_color *= 1 + 0.8 * factor;
	o_color.a = 1.0;
}
