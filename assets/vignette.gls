@attrib vec2 a_vertex
@varying smooth vec2 v_vertex
@in color u_colorBuffer
@out rgba8 color o_color

@shader vertex

void main() {
	gl_Position = vec4(a_vertex, 0.0, 1.0);
	v_vertex = a_vertex / 2.0 + 0.5;
}

@shader fragment

const float OUTER = 0.75;
const float INNER = 0.07;
const float INTENSITY = 0.15;

vec4 vignette(const in vec2 texCoord, const in vec4 color) {
	float len = length(texCoord - vec2(0.5));
	float vignette = smoothstep(OUTER, INNER, len);
	return vec4(mix(color.rgb, color.rgb * vignette, INTENSITY), 1.0);
}

void main() {
	o_color = vignette(v_vertex, texture(u_colorBuffer, v_vertex));
}
