@uniform float u_blur
@attrib vec2 a_vertex
@varying smooth vec2 v_vertex
@in color u_colorBuffer
@out rgba8 color o_color

@shader vertex

void main() {
	gl_Position = vec4(a_vertex, 0.0, 1.0);
	v_vertex = a_vertex / 2.0 + 0.5;
}

@shader fragment

void main() {
	vec2 texCoord = v_vertex;
	ivec2 size = textureSize(u_colorBuffer, 0);
	float aspect = float(size.x) / float(size.y);
	vec2 aspectCorrect = vec2(1.0, aspect);

	vec3 original = texture(u_colorBuffer, texCoord).rgb;
	float blur = 0.05;
	blur = u_blur;

	vec3 col = vec3(0.0);
	col += original;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.0,   0.4)  * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.15,  0.37) * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.29,  0.29) * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.37,  0.15) * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.4,   0.0)  * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.37, -0.15) * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.29, -0.29) * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.15, -0.37) * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.0,  -0.4)  * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.15,  0.37) * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.29,  0.29) * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.37,  0.15) * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.4,   0.0)  * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.37, -0.15) * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.29, -0.29) * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.15, -0.37) * aspectCorrect) * blur).rgb;

	col += texture(u_colorBuffer, texCoord + (vec2( 0.15,  0.37) * aspectCorrect) * blur * 0.9).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.37,  0.15) * aspectCorrect) * blur * 0.9).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.37, -0.15) * aspectCorrect) * blur * 0.9).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.15, -0.37) * aspectCorrect) * blur * 0.9).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.15,  0.37) * aspectCorrect) * blur * 0.9).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.37,  0.15) * aspectCorrect) * blur * 0.9).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.37, -0.15) * aspectCorrect) * blur * 0.9).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.15, -0.37) * aspectCorrect) * blur * 0.9).rgb;

	col += texture(u_colorBuffer, texCoord + (vec2( 0.29,  0.29) * aspectCorrect) * blur * 0.7).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.4,   0.0)  * aspectCorrect) * blur * 0.7).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.29, -0.29) * aspectCorrect) * blur * 0.7).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.0,  -0.4)  * aspectCorrect) * blur * 0.7).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.29,  0.29) * aspectCorrect) * blur * 0.7).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.4,   0.0)  * aspectCorrect) * blur * 0.7).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.29, -0.29) * aspectCorrect) * blur * 0.7).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.0,   0.4)  * aspectCorrect) * blur * 0.7).rgb;

	col += texture(u_colorBuffer, texCoord + (vec2( 0.29,  0.29) * aspectCorrect) * blur * 0.4).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.4,   0.0)  * aspectCorrect) * blur * 0.4).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.29, -0.29) * aspectCorrect) * blur * 0.4).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.0,  -0.4)  * aspectCorrect) * blur * 0.4).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.29,  0.29) * aspectCorrect) * blur * 0.4).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.4,   0.0)  * aspectCorrect) * blur * 0.4).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.29, -0.29) * aspectCorrect) * blur * 0.4).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.0,   0.4)  * aspectCorrect) * blur * 0.4).rgb;

	o_color.rgb = col / 41.0;
	o_color.a = 1.0;
}
