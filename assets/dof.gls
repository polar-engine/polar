@attrib vec2 a_vertex
@varying smooth vec2 v_vertex
@in color u_colorBuffer
@gin depth u_depthBuffer
@out rgba8 color o_color

@shader vertex

void main() {
	gl_Position = vec4(a_vertex, 0.0, 1.0);
	v_vertex = a_vertex / 2.0 + 0.5;
}

@shader fragment

const float maxBlur = 0.9;
const float bias = 0.035;
const float focus = 0.7;

float Depth(in vec2 texCoord) {
	float f = 48.0;
	float n = 0.1;
	float z = (2 * n) / (f + n - texture(u_depthBuffer, texCoord).r * (f - n));
	return z;
}

void main() {
	vec2 texCoord = v_vertex;
	vec3 color = texture(u_colorBuffer, texCoord).rgb;

	ivec2 size = textureSize(u_colorBuffer, 0);
	float aspect = float(size.x) / float(size.y);
	vec2 aspectCorrect = vec2(1.0, aspect);

	float factor = Depth(texCoord) - focus;
	vec2 blur = vec2(clamp(factor * bias, -maxBlur, 0));

	vec3 col = vec3(0.0);

	col += texture(u_colorBuffer, texCoord).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.0,   0.4)  * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.15,  0.37) * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.29,  0.29) * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.37,  0.15) * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.4,   0.0)  * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.37, -0.15) * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.29, -0.29) * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.15, -0.37) * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.0,  -0.4)  * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.15,  0.37) * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.29,  0.29) * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.37,  0.15) * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.4,   0.0)  * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.37, -0.15) * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.29, -0.29) * aspectCorrect) * blur).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.15, -0.37) * aspectCorrect) * blur).rgb;

	col += texture(u_colorBuffer, texCoord + (vec2( 0.15,  0.37) * aspectCorrect) * blur * 0.9).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.37,  0.15) * aspectCorrect) * blur * 0.9).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.37, -0.15) * aspectCorrect) * blur * 0.9).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.15, -0.37) * aspectCorrect) * blur * 0.9).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.15,  0.37) * aspectCorrect) * blur * 0.9).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.37,  0.15) * aspectCorrect) * blur * 0.9).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.37, -0.15) * aspectCorrect) * blur * 0.9).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.15, -0.37) * aspectCorrect) * blur * 0.9).rgb;

	col += texture(u_colorBuffer, texCoord + (vec2( 0.29,  0.29) * aspectCorrect) * blur * 0.7).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.4,   0.0)  * aspectCorrect) * blur * 0.7).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.29, -0.29) * aspectCorrect) * blur * 0.7).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.0,  -0.4)  * aspectCorrect) * blur * 0.7).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.29,  0.29) * aspectCorrect) * blur * 0.7).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.4,   0.0)  * aspectCorrect) * blur * 0.7).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.29, -0.29) * aspectCorrect) * blur * 0.7).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.0,   0.4)  * aspectCorrect) * blur * 0.7).rgb;

	col += texture(u_colorBuffer, texCoord + (vec2( 0.29,  0.29) * aspectCorrect) * blur * 0.4).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.4,   0.0)  * aspectCorrect) * blur * 0.4).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.29, -0.29) * aspectCorrect) * blur * 0.4).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.0,  -0.4)  * aspectCorrect) * blur * 0.4).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.29,  0.29) * aspectCorrect) * blur * 0.4).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.4,   0.0)  * aspectCorrect) * blur * 0.4).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2(-0.29, -0.29) * aspectCorrect) * blur * 0.4).rgb;
	col += texture(u_colorBuffer, texCoord + (vec2( 0.0,   0.4)  * aspectCorrect) * blur * 0.4).rgb;

	o_color.rgb = col / 41.0;
	o_color.a = 1.0;
}
