@attrib vec2 a_vertex
@varying smooth vec2 v_vertex
@in color u_colorBuffer
@gin depth u_depthBuffer
@out rgba32 color o_color

@shader vertex

void main() {
	gl_Position = vec4(a_vertex, 0.0, 1.0);
	v_vertex = (a_vertex + 1.0) / 2.0;
}

@shader fragment

float Depth(in vec2 texCoord) {
	float depthRange = 1.0 / 64.0;
	float lowerDepth = 1.0 - depthRange;
	return (texture(u_depthBuffer, texCoord).r - lowerDepth) / depthRange;
}

void main() {
	vec2 texCoord = v_vertex;
	vec4 color = texture(u_colorBuffer, texCoord);
	float depth = Depth(texCoord);
	o_color = mix(color, vec4(0.0, 0.0, 0.0, 1.0), max(0.0, pow(depth, 50.0)));
}
