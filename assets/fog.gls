@attrib vec2 a_vertex
@varying smooth vec2 v_vertex
@in color u_colorBuffer
@gin depth u_depthBuffer
@out rgb8 color o_color

@shader vertex

void main() {
	gl_Position = vec4(a_vertex, 0.0, 1.0);
	v_vertex = (a_vertex + 1.0) / 2.0;
}

@shader fragment

float Depth(in vec2 texCoord) {
	float f = 48.0;
	float n = 0.1;
	float z = (2 * n) / (f + n - texture(u_depthBuffer, texCoord).r * (f - n));
	return z;
}

void main() {
	vec2 texCoord = v_vertex;
	vec3 color = texture(u_colorBuffer, texCoord).rgb;
	float depth = Depth(texCoord);
	o_color = mix(color, vec3(0.0), max(0.0, pow(depth, 8.0)));
}
